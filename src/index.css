@tailwind base;
@tailwind components;
@tailwind utilities;

::selection {
  background-color: #E44A32;
  background-color: #15803D;
  color: #ffffff;
}

/* ----------------------- Toastify -----------------------*/

/* Target the main container that holds all toasts */
.Toastify__toast-container {
  /* These styles are intended for the overall container of toasts */
  display: flex;
  flex-direction: column;
  gap: 1vw;

  position: fixed;
  top: 20px;
  right: 20px;
  z-index: 9999;
  pointer-events: none;
}

.Toastify__toast {
  background-color: #f0f0f0 !important;
  color: #333 !important;
  border-radius: 30px !important;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1) !important;
  overflow: hidden;
  padding: 24px;

  width: 380px;
  max-width: 90vw;
  pointer-events: auto;
}

.Toastify__progress-bar {
  height: 10px !important;
  border-radius: 0 0 30px 30px !important;
}

.Toastify__close-button {
  margin-right: 8px;

  align-self: flex-start;

  color: #555;
  opacity: 0.8;
  transition: opacity 0.2s ease-in-out;
}

.Toastify__close-button:hover {
  opacity: 1;
  color: #000;
}

/* ----------- Responsive Adjustments (Media Queries) for toastify -----------*/
@media (max-width: 768px) {

  /* Tablets and smaller */
  .Toastify__toast-container {
    /* Adjust position for mobile */
    top: 0 !important;
    /* Move to top of screen */
    left: 0 !important;
    right: 0 !important;
    width: 100% !important;
    /* Take full width */
    align-items: center;
    /* Center toasts horizontally */
    padding: 10px 0;
    /* Add some vertical padding */
    gap: 2vh;
    /* Reduce gap on smaller screens */
  }

  .Toastify__toast {
    width: 90% !important;
    /* Make toasts 90% width of viewport */
    max-width: 400px;
    /* But don't let them get too wide */
    padding: 18px;
    /* Slightly less padding */
    border-radius: 20px !important;
    /* Adjust border-radius for mobile */
  }

  .Toastify__progress-bar {
    border-radius: 0 0 20px 20px !important;
    /* Match toast's new radius */
  }

  .Toastify__close-button {
    margin-right: 5px;
    /* Example: slightly less margin on mobile */
    /* If you added margin-top, adjust it here too */
    /* margin-top: 5px; */
  }
}

@media (max-width: 480px) {

  /* Smartphones */
  .Toastify__toast-container {
    gap: 1.5vh;
  }

  .Toastify__toast {
    padding: 15px;
    font-size: 0.9em;
    /* Smaller font for text content */
  }
}

/* ----------------------- Loading Progress Bar -----------------------*/
.loader {
  display: flex;
  align-items: center;
  justify-content: center;
}

.panWrapper {
  width: 200px;
  height: fit-content;
  position: relative;
  display: flex;
  align-items: flex-start;
  justify-content: flex-end;
  flex-direction: column;
  gap: 20px;
}

.pan {
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
  width: 100%;
  height: fit-content;
  animation: cooking 1.7s infinite;
}


@keyframes cooking {
  0% {
    transform: rotate(0deg);
    transform-origin: top right;
  }

  10% {
    transform: rotate(-4deg);
    transform-origin: top right;
  }

  50% {
    transform: rotate(20deg);
  }

  100% {
    transform: rotate(0deg);
  }
}

.food {
  position: absolute;
  width: 24%;
  height: 24px;
  background: linear-gradient(to bottom, rgb(82, 33, 33), rgb(142, 86, 86));
  left: 30px;
  border-radius: 38%;
  animation: flip 1.7s infinite;
  z-index: 2;
}

@keyframes flip {
  0% {
    transform: translateY(0px) rotate(0deg);
  }

  50% {
    transform: translateY(-100px) rotate(180deg);
  }

  100% {
    transform: translateY(0px) rotate(360deg);
  }
}

.panBase {
  z-index: 3;
  width: 50%;
  height: 26px;
  border-bottom-left-radius: 40px;
  border-bottom-right-radius: 40px;
  /* background: linear-gradient(to top, rgb(3, 156, 156), rgb(10, 191, 191)); */
  background: linear-gradient(to top, rgb(11, 12, 11), rgb(156, 163, 163));
}

.panHandle {
  width: 40%;
  background: linear-gradient(to bottom, rgb(18, 18, 18), rgb(74, 74, 74));
  height: 10px;
  border-radius: 10px;
}

.panShadow {
  width: 70px;
  height: 8px;
  background-color: rgba(0, 0, 0, 0.21);
  margin-left: 15px;
  border-radius: 10px;
  animation: shadow 1.7s infinite;
  filter: blur(5px);
}

@keyframes shadow {
  0% {
    transform: scaleX(0.7);
  }

  50% {
    transform: scaleX(1);
  }

  100% {
    transform: scaleX(0.7);
  }
}

/* Custom CSS for animations and responsiveness */
/* ----------------------- Chatbot CSS -----------------------*/
/* Base styles for the chatbot container, applies to all screen sizes initially */
.chatbot-container {
  position: fixed;
  /* Always fixed relative to viewport */
  bottom: 1.5rem;
  /* Default bottom offset (e.g., for smaller desktop, or if mobile styling doesn't override fully) */
  right: 1.5rem;
  /* Default right offset */
  width: 100%;
  /* Default to full width for small screens if not overridden */
  height: auto;
  /* Default height */
  max-width: 24rem;
  /* Max width for desktop (e.g., md:max-w-md) */
  max-height: 80vh;
  /* Max height to ensure it fits on screen */
  background-color: white;
  z-index: 50;
  /* Ensure it's above other content */
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  border-radius: 0.75rem;
  display: flex;
  flex-direction: column;
  transition: transform 0.3s ease-in-out;
  transform: translateY(calc(100% + 1.5rem));
  /* Start off-screen (icon height + gap) */
  /* This transform will handle sliding in/out for both mobile and desktop */
}

/* This class controls the "open" state */
.chatbot-container.open {
  transform: translateY(0);
  /* Slide into view */
}

/* Mobile specific overrides (up to 768px, typical 'md' breakpoint) */
@media (max-width: 768px) {
  .chatbot-container {
    top: 0;
    /* Take full height from top */
    left: 0;
    /* Take full width from left */
    width: 100vw;
    height: 100%;
    max-width: 100vw;
    max-height: 100vh;
    border-radius: 0;
    z-index: 99;
  }
}

/* Styling for scrollable chat messages area */
.chat-messages {
  overflow-y: auto;
  scroll-behavior: smooth;
}

/* Typing indicator animation */
@keyframes typing-dot-bounce {

  0%,
  80%,
  100% {
    transform: translateY(0);
  }

  40% {
    transform: translateY(-5px);
  }
}

.typing-dot {
  animation: typing-dot-bounce 0.6s infinite ease-in-out;
}

.typing-dot:nth-child(2) {
  animation-delay: 0.1s;
}

.typing-dot:nth-child(3) {
  animation-delay: 0.2s;
}

/* Default styling for chat message content */
.chat-message-content {
  white-space: pre-wrap;
  /* Preserves whitespace and wraps text */
  word-break: break-word;
  /* Breaks long words if necessary */
}

/* Markdown specific styling for headings within chat messages */
.chat-message-content h1,
.chat-message-content h2,
.chat-message-content h3,
.chat-message-content h4,
.chat-message-content h5,
.chat-message-content h6 {
  font-weight: bold;
  /* Make all headings bold */
  margin-top: 0.5em;
  /* Add some space above headings */
  margin-bottom: 0.2em;
  /* Add some space below headings */
}

.chat-message-content h1 {
  font-size: 1.5em;
}

.chat-message-content h2 {
  font-size: 1.3em;
}

.chat-message-content h3 {
  font-size: 1.1em;
}

/* General paragraph spacing */
.chat-message-content p {
  margin-bottom: 0.5em;
}

/* List styling */
.chat-message-content ul,
.chat-message-content ol {
  margin-left: 1.2em;
  margin-bottom: 0.5em;
}

.chat-message-content li {
  margin-bottom: 0.2em;
}

/* Styling for the textarea input field */
textarea.chat-input {
  resize: none;
  /* Disable manual resizing by user */
  overflow-y: hidden;
  /* Hide scrollbar initially */
  min-height: 2.5rem;
  /* Equivalent to py-2 height for a single line */
  max-height: 10rem;
  /* Prevent it from growing too large, adjust as needed */
  padding-top: 0.625rem;
  /* Match px-4 py-2 visually for text alignment */
  padding-bottom: 0.625rem;
}